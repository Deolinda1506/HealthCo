# Generated by Django 5.1.3 on 2024-11-08 08:53

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_doctor', models.BooleanField(default=False)),
                ('is_patient', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DoctorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialization', models.CharField(choices=[('cardiology', 'Cardiologie'), ('dermatology', 'Dermatologie'), ('gastroenterology', 'Gastro-entérologie'), ('neurology', 'Neurologie'), ('pediatrics', 'Pédiatrie'), ('gynecology', 'Gynécologie-Obstétrique'), ('oncology', 'Oncologie'), ('ophthalmology', 'Ophtalmologie'), ('ent', 'Oto-rhino-laryngologie (ORL)'), ('pulmonology', 'Pneumologie'), ('psychiatry', 'Psychiatrie'), ('rheumatology', 'Rhumatologie'), ('endocrinology', 'Endocrinologie'), ('internal_medicine', 'Médecine Interne'), ('nephrology', 'Néphrologie'), ('hematology', 'Hématologie'), ('general_surgery', 'Chirurgie Générale'), ('cardiac_surgery', 'Chirurgie Cardiaque'), ('orthopedic_surgery', 'Chirurgie Orthopédique'), ('plastic_surgery', 'Chirurgie Plastique et Esthétique'), ('urology', 'Urologie'), ('nuclear_medicine', 'Médecine Nucléaire'), ('radiology', 'Radiologie'), ('sports_medicine', 'Médecine du Sport'), ('geriatrics', 'Gériatrie'), ('infectiology', 'Infectiologie'), ('anesthesiology', 'Anesthésiologie'), ('allergology', 'Allergologie'), ('rehabilitation_medicine', 'Médecine Physique et de Réadaptation'), ('emergency_medicine', "Médecine d'Urgence")], max_length=50)),
                ('bio', models.TextField(blank=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PatientProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date de naissance')),
                ('gender', models.CharField(choices=[('male', 'Homme'), ('female', 'Femme'), ('other', 'Autre')], max_length=10, verbose_name='Sexe')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='Numéro de téléphone')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Adresse')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100, null=True, verbose_name="Nom du contact d'urgence")),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=15, null=True, verbose_name="Téléphone du contact d'urgence")),
                ('blood_type', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('O+', 'O+'), ('O-', 'O-'), ('AB+', 'AB+'), ('AB-', 'AB-')], max_length=3, null=True, verbose_name='Groupe sanguin')),
                ('known_allergies', models.TextField(blank=True, null=True, verbose_name='Allergies connues')),
                ('medical_history', models.TextField(blank=True, null=True, verbose_name='Antécédents médicaux')),
                ('current_medications', models.TextField(blank=True, null=True, verbose_name='Médicaments actuels')),
                ('insurance_provider', models.CharField(blank=True, max_length=100, null=True, verbose_name="Fournisseur d'assurance")),
                ('insurance_number', models.CharField(blank=True, max_length=50, null=True, verbose_name="Numéro d'assurance")),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de création du profil')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
